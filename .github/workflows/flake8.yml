name: Flake8

on:
  pull_request:
    branches:
      - main
    paths: 'backend/**'
  push:
    branches:
      - main

jobs:
  admin_pannel:
    runs-on: ubuntu-latest

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      # install dependencies
      #----------------------------------------------
      - name: Install dependencies
        run: |
          cd backend/services/admin_panel
          poetry install --no-interaction --no-root
      #----------------------------------------------
      # analise code
      #----------------------------------------------
      - name: Analysing the admin_panel service code with flake8
        run: |
          cd backend/services/admin_panel
          source .venv/bin/activate
          mkdir -p flake-report
          pflake8 .
          deactivate
          exit ${exit_code}
      #----------------------------------------------
      # create artifacts
      #----------------------------------------------
      - name: Upload vendor artifacts
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: admin_panel_flake8_report
          path: backend/services/admin_panel/flake-report

  vendor:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      # install dependencies
      #----------------------------------------------
      - name: Install dependencies
        run: |
          cd backend/services/vendor
          poetry install --no-interaction --no-root
      #----------------------------------------------
      # analise code
      #----------------------------------------------
      - name: Analysing the vendor service code with flake8
        run: |
          cd backend/services/vendor
          source .venv/bin/activate
          mkdir -p flake-report
          pflake8 .
          deactivate
          exit ${exit_code}
      #----------------------------------------------
      # create artifacts
      #----------------------------------------------
      - name: Upload vendor artifacts
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: vendor_flake8_report
          path: backend/services/vendor/flake-report

  cv:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      # install dependencies
      #----------------------------------------------
      - name: Install dependencies
        run: |
          cd backend/services/cv
          poetry install --no-interaction --no-root
      #----------------------------------------------
      # analise code
      #----------------------------------------------
      - name: Analysing the vendor service code with flake8
        run: |
          cd backend/services/cv
          source .venv/bin/activate
          mkdir -p flake-report
          pflake8 .
          deactivate
          exit ${exit_code}
      #----------------------------------------------
      # create artifacts
      #----------------------------------------------
      - name: Upload vendor artifacts
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: cv_flake8_report
          path: backend/services/cv/flake-report
