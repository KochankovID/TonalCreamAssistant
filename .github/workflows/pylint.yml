name: Linters

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          cd backend/services/admin_panel
          poetry install --no-interaction --no-root

  pylint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Analysing the admin_panel service code with pylint
        run: |
          cd backend/services/admin_panel
          source .venv/bin/activate
          mkdir -p pylint_report
          pylint * > ./pylint_report/pylint_checks.json || exit_code=`echo $?` || true
          pylint-json2html -o ./pylint_report/pylint_checks.html ./pylint_report/pylint_checks.json
          deactivate
          exit ${exit_code}

      - name: Upload artifacts
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: pylint_report
          path: backend/services/admin_panel/pylint_report
